/*
 * Copyright (C) 2016 Freescale Semiconductor, Inc.
 * Copyright 2017 NXP
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/dts-v1/;
#include <dt-bindings/usb/pd.h>
#include "imx8mq-itx-p-c444.dtsi"

/ {
        model = "Winsystem i.MX8MQ PICOITX";
        compatible = "fsl,imx8mq";


        dbg_console_settings: chosen {
                stdout-path = &uart1;
        };

        pcie0_refclk: pcie0-refclk {
                compatible = "fixed-clock";
                #clock-cells = <0>;
                clock-frequency = <100000000>;
        };

        pcie1_refclk: pcie0-refclk {
                compatible = "fixed-clock";
                #clock-cells = <0>;
                clock-frequency = <100000000>;
        };

	memory@40000000 {
		device_type = "memory";
		reg = <0x00000000 0x40000000 0x1 0x00000000>;
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		rpmsg_reserved: rpmsg@0xb8000000 {
			no-map;
			reg = <0 0xb8000000 0 0x400000>;
		};
	};

	resmem: reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		/* cma region is provided by kernel command line as cma=<size>M */
		/delete-node/ linux,cma;
	};


//	Uncomment if using mcp251x on spi
	
        can0_osc: can0_osc {
                compatible = "fixed-clock";
                #clock-cells = <0>;
                clock-frequency  = <20000000>;
        };
	

        reg_usdhc2_vmmc: usdhc2_vmmc {
                pinctrl-names = "default";
                pinctrl-0 = <&pinctrl_reg_usdhc2>;
                compatible = "regulator-fixed";
                regulator-name = "VSD_3V3";
                regulator-min-microvolt = <3300000>;
                regulator-max-microvolt = <3300000>;
                gpio = <&gpio2 19 GPIO_ACTIVE_HIGH>;
                off-on-delay = <20000>;
                enable-active-high;
        };

        sound-wm8960 {
                compatible = "simple-audio-card";
                simple-audio-card,name = "wm8960-audio";
                simple-audio-card,format = "i2s";
                simple-audio-card,frame-master = <&cpudai>;
                simple-audio-card,bitclock-master = <&cpudai>;
                simple-audio-card,widgets =
                        "Line", "Line Out Jack",
			"Line", "Line in Jack",
			"Microphone", "Microphone Jack";

                simple-audio-card,routing =
                        "Line Out Jack", "HP_L",
                        "Line Out Jack", "HP_R",
			"Line in Jack", "LINPUT3",
			"Line in Jack", "RINPUT3",
			"Microphone Jack", "LINPUT2",
			"Microphone Jack", "RINPUT2";

                cpudai: simple-audio-card,cpu {
                        sound-dai = <&sai2>;
                        dai-tdm-slot-num = <2>;
                        dai-tdm-slot-width = <32>;
                };

                link_codec: simple-audio-card,codec {
                        sound-dai = <&audio_codec>;
                        clocks = <&clk IMX8MQ_CLK_SAI2_ROOT>;
                };
        };

};


&iomuxc {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_hog>;

        pinctrl_hog: hoggrp {
                fsl,pins = <
                        /* GPIO PINS for 8 pin GPIO connector */
                        MX8MQ_IOMUXC_GPIO1_IO00_GPIO1_IO0       0x19
                        MX8MQ_IOMUXC_GPIO1_IO01_GPIO1_IO1       0x19
                        MX8MQ_IOMUXC_GPIO1_IO03_GPIO1_IO3       0x19
                        MX8MQ_IOMUXC_GPIO1_IO05_GPIO1_IO5       0x19
                        MX8MQ_IOMUXC_GPIO1_IO06_GPIO1_IO6       0x19
                        MX8MQ_IOMUXC_GPIO1_IO07_GPIO1_IO7       0x19

                        /* STATUS LED */
                        MX8MQ_IOMUXC_SAI5_RXC_GPIO3_IO20        0x19
                        /* USER LED */
                        MX8MQ_IOMUXC_SPDIF_RX_GPIO5_IO4         0x19
                        MX8MQ_IOMUXC_GPIO1_IO10_GPIO1_IO10     0x19
                        MX8MQ_IOMUXC_GPIO1_IO11_GPIO1_IO11     0x19
                        MX8MQ_IOMUXC_GPIO1_IO14_GPIO1_IO14     0x19
                        MX8MQ_IOMUXC_SAI1_TXC_GPIO4_IO11        0x19

                >;
        };

        pinctrl_csi1_pwn: csi1_pwn_grp {
                fsl,pins = <
                        MX8MQ_IOMUXC_SAI5_MCLK_GPIO3_IO25       0x19
                >;
        };

        pinctrl_pmic: pmicgrp {
                fsl,pins = <
                        MX8MQ_IOMUXC_SAI1_MCLK_GPIO4_IO20       0x19
                >;
        };

        pinctrl_fec1: fec1grp {
                fsl,pins = <
                        MX8MQ_IOMUXC_ENET_MDC_ENET1_MDC         0x3
                        MX8MQ_IOMUXC_ENET_MDIO_ENET1_MDIO       0x23
                        MX8MQ_IOMUXC_ENET_TD3_ENET1_RGMII_TD3   0x1f
                        MX8MQ_IOMUXC_ENET_TD2_ENET1_RGMII_TD2   0x1f
                        MX8MQ_IOMUXC_ENET_TD1_ENET1_RGMII_TD1   0x1f
                        MX8MQ_IOMUXC_ENET_TD0_ENET1_RGMII_TD0   0x1f
                        MX8MQ_IOMUXC_ENET_RD3_ENET1_RGMII_RD3   0x91
                        MX8MQ_IOMUXC_ENET_RD2_ENET1_RGMII_RD2   0x91
                        MX8MQ_IOMUXC_ENET_RD1_ENET1_RGMII_RD1   0x91
                        MX8MQ_IOMUXC_ENET_RD0_ENET1_RGMII_RD0   0x91
                        MX8MQ_IOMUXC_ENET_TXC_ENET1_RGMII_TXC   0x1f
                        MX8MQ_IOMUXC_ENET_RXC_ENET1_RGMII_RXC   0x91
                        MX8MQ_IOMUXC_ENET_RX_CTL_ENET1_RGMII_RX_CTL 0x91
                        MX8MQ_IOMUXC_ENET_TX_CTL_ENET1_RGMII_TX_CTL 0x1f
                        MX8MQ_IOMUXC_SAI1_RXFS_GPIO4_IO0        0x19
                        MX8MQ_IOMUXC_SAI1_RXC_GPIO4_IO1         0x19
                >;
        };

        pinctrl_i2c1: i2c1grp {
                fsl,pins = <
                        MX8MQ_IOMUXC_I2C1_SCL_I2C1_SCL  0x4000007f
                        MX8MQ_IOMUXC_I2C1_SDA_I2C1_SDA  0x4000007f
                >;
        };

        pinctrl_i2c2: i2c2grp {
                fsl,pins = <
                        MX8MQ_IOMUXC_I2C2_SCL_I2C2_SCL  0x4000007f
                        MX8MQ_IOMUXC_I2C2_SDA_I2C2_SDA  0x4000007f
                >;
        };

        pinctrl_i2c3: i2c3grp {
                fsl,pins = <
                        MX8MQ_IOMUXC_I2C3_SCL_I2C3_SCL  0x4000007f
                        MX8MQ_IOMUXC_I2C3_SDA_I2C3_SDA  0x4000007f
                        /* I2C_GPIO_INT */
                        MX8MQ_IOMUXC_SAI3_TXFS_GPIO4_IO31       0x16
                >;
        };

        pinctrl_pcie0: pcie0grp {
                fsl,pins = <
                        MX8MQ_IOMUXC_I2C4_SCL_GPIO5_IO20        0x16
                        MX8MQ_IOMUXC_SAI3_RXC_GPIO4_IO29        0x16
                        MX8MQ_IOMUXC_SAI3_RXD_GPIO4_IO30        0x16
                        /* SMB_ALERT_N */
                        MX8MQ_IOMUXC_SAI3_TXD_GPIO5_IO1         0x16
                >;
        };

        pinctrl_pcie1: pcie1grp {
                fsl,pins = <
                        MX8MQ_IOMUXC_I2C4_SDA_GPIO5_IO21        0x16
                        MX8MQ_IOMUXC_SAI3_TXC_GPIO5_IO0         0x16
                        MX8MQ_IOMUXC_SAI5_RXFS_GPIO3_IO19       0x16
                        /* MPCIE_WAKE */
                        MX8MQ_IOMUXC_SAI1_TXFS_GPIO4_IO10       0x16
                >;
        };

        pinctrl_uart1: uart1grp {
                fsl,pins = <
                        MX8MQ_IOMUXC_UART1_RXD_UART1_DCE_RX     0x49
                        MX8MQ_IOMUXC_UART1_TXD_UART1_DCE_TX     0x49
			MX8MQ_IOMUXC_UART3_RXD_GPIO5_IO26	0x49
			MX8MQ_IOMUXC_UART3_TXD_GPIO5_IO27	0x49
                >;
        };

        pinctrl_uart2: uart2grp {
                fsl,pins = <
                        MX8MQ_IOMUXC_UART2_RXD_UART2_DCE_RX     0x49
                        MX8MQ_IOMUXC_UART2_TXD_UART2_DCE_TX     0x49
                        MX8MQ_IOMUXC_UART4_RXD_GPIO5_IO28       0x49
			MX8MQ_IOMUXC_UART4_TXD_GPIO5_IO29       0x49
                >;
        };

        pinctrl_serial1_gpio: serial1grpgpio {
                fsl,pins = <
                        MX8MQ_IOMUXC_NAND_CE2_B_GPIO3_IO3       0x59
                        MX8MQ_IOMUXC_NAND_CE3_B_GPIO3_IO4       0x19
                        MX8MQ_IOMUXC_NAND_DQS_GPIO3_IO14        0x19
                        MX8MQ_IOMUXC_NAND_RE_B_GPIO3_IO15       0x19
                        MX8MQ_IOMUXC_NAND_READY_B_GPIO3_IO16    0x19
                        MX8MQ_IOMUXC_NAND_WE_B_GPIO3_IO17       0x19
                        MX8MQ_IOMUXC_NAND_WP_B_GPIO3_IO18       0x19
                >;
        };


        pinctrl_serial2_gpio: serial2grpgpio {
                fsl,pins = <
                        MX8MQ_IOMUXC_NAND_DATA07_GPIO3_IO13     0x59
                        MX8MQ_IOMUXC_NAND_DATA06_GPIO3_IO12     0x19
                        MX8MQ_IOMUXC_NAND_DATA05_GPIO3_IO11     0x19
                        MX8MQ_IOMUXC_NAND_DATA04_GPIO3_IO10     0x19
                        MX8MQ_IOMUXC_NAND_DATA03_GPIO3_IO9      0x19
                        MX8MQ_IOMUXC_NAND_DATA02_GPIO3_IO8      0x19
                        MX8MQ_IOMUXC_NAND_DATA01_GPIO3_IO7      0x19
                >;
        };

        pinctrl_usdhc1: usdhc1grp {
                fsl,pins = <
                        MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK         0x83
                        MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD         0xc3
                        MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0     0xc3
                        MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1     0xc3
                        MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2     0xc3
                        MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3     0xc3
                        MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4     0xc3
                        MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5     0xc3
                        MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6     0xc3
                        MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7     0xc3
                        MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE   0x83
                        MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B 0xc1
                >;
        };

        pinctrl_usdhc1_100mhz: usdhc1grp100mhz {
                fsl,pins = <
                        MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK         0x85
                        MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD         0xc5
                        MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0     0xc5
                        MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1     0xc5
                        MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2     0xc5
                        MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3     0xc5
                        MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4     0xc5
                        MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5     0xc5
                        MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6     0xc5
                        MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7     0xc5
                        MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE   0x85
                        MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B 0xc1
                >;
        };

        pinctrl_usdhc1_200mhz: usdhc1grp200mhz {
                fsl,pins = <
                        MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK         0x87
                        MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD         0xc7
                        MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0     0xc7
                        MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1     0xc7
                        MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2     0xc7
                        MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3     0xc7
                        MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4     0xc7
                        MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5     0xc7
                        MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6     0xc7
                        MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7     0xc7
                        MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE   0x87
                        MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B 0xc1
                >;
        };
	pinctrl_reg_usdhc2: regusdhc2grpgpio {
		fsl,pins = <
			MX8MQ_IOMUXC_SD2_RESET_B_GPIO2_IO19             0x41
		>;
        };

        pinctrl_usdhc2_gpio: usdhc2cdgpio {
                fsl,pins = <
                        MX8MQ_IOMUXC_SD2_CD_B_GPIO2_IO12        0x41
                >;
        };

        pinctrl_usdhc2: usdhc2grp {
                fsl,pins = <
                        MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK         0x83
                        MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD         0xc3
                        MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0     0xc3
                        MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1     0xc3
                        MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2     0xc3
                        MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3     0xc3
                        MX8MQ_IOMUXC_GPIO1_IO04_USDHC2_VSELECT  0xc1
                >;
        };

        pinctrl_usdhc2_100mhz: usdhc2grp100mhz {
                fsl,pins = <
                        MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK         0x85
                        MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD         0xc5
                        MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0     0xc5
                        MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1     0xc5
                        MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2     0xc5
                        MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3     0xc5
                        MX8MQ_IOMUXC_GPIO1_IO04_USDHC2_VSELECT  0xc1
                >;
        };

        pinctrl_usdhc2_200mhz: usdhc2grp200mhz {
                fsl,pins = <
                        MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK         0x87
                        MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD         0xc7
                        MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0     0xc7
                        MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1     0xc7
                        MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2     0xc7
                        MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3     0xc7
                        MX8MQ_IOMUXC_GPIO1_IO04_USDHC2_VSELECT  0xc1
                >;
        };

        pinctrl_sai1: sai1grp {
                fsl,pins = <
                        MX8MQ_IOMUXC_SAI1_TXD0_SAI1_TX_DATA0    0xd6
                        MX8MQ_IOMUXC_SAI1_TXD1_SAI1_TX_DATA1    0xd6
                        MX8MQ_IOMUXC_SAI1_TXD2_SAI1_TX_DATA2    0xd6
                        MX8MQ_IOMUXC_SAI1_TXD3_SAI1_TX_DATA3    0xd6
                        MX8MQ_IOMUXC_SAI1_TXD4_SAI1_TX_DATA4    0xd6
                        MX8MQ_IOMUXC_SAI1_TXD5_SAI1_TX_DATA5    0xd6
                        MX8MQ_IOMUXC_SAI1_TXD6_SAI1_TX_DATA6    0xd6
                        MX8MQ_IOMUXC_SAI1_TXD7_SAI1_TX_DATA7    0xd6
                        MX8MQ_IOMUXC_SAI1_RXD0_SAI1_RX_DATA0    0xd6
                        MX8MQ_IOMUXC_SAI1_RXD1_SAI1_RX_DATA1    0xd6
                        MX8MQ_IOMUXC_SAI1_RXD2_SAI1_RX_DATA2    0xd6
                        MX8MQ_IOMUXC_SAI1_RXD3_SAI1_RX_DATA3    0xd6
                        MX8MQ_IOMUXC_SAI1_RXD4_SAI1_RX_DATA4    0xd6
                        MX8MQ_IOMUXC_SAI1_RXD5_SAI1_RX_DATA5    0xd6
                        MX8MQ_IOMUXC_SAI1_RXD6_SAI1_RX_DATA6    0xd6
                        MX8MQ_IOMUXC_SAI1_RXD7_SAI1_RX_DATA7    0xd6
                >;
        };

        pinctrl_sai2: sai2grp {
                fsl,pins = <
                        MX8MQ_IOMUXC_SAI2_TXFS_SAI2_TX_SYNC     0xd6
                        MX8MQ_IOMUXC_SAI2_TXC_SAI2_TX_BCLK      0xd6
                        MX8MQ_IOMUXC_SAI2_MCLK_SAI2_MCLK        0xd6
                        MX8MQ_IOMUXC_SAI2_TXD0_SAI2_TX_DATA0    0xd6
                        MX8MQ_IOMUXC_SAI2_RXD0_SAI2_RX_DATA0    0xd6
                        MX8MQ_IOMUXC_SAI2_RXFS_SAI2_RX_SYNC     0xd6
                >;
        };

        pinctrl_wdog: wdoggrp {
                fsl,pins = <
                        MX8MQ_IOMUXC_GPIO1_IO02_WDOG1_WDOG_B 0xc6
                >;
        };

        pinctrl_ecspi1: ecspi1grp {
                fsl,pins = <
                        MX8MQ_IOMUXC_ECSPI1_MISO_ECSPI1_MISO    0x16
                        MX8MQ_IOMUXC_ECSPI1_MOSI_ECSPI1_MOSI    0x16
                        MX8MQ_IOMUXC_ECSPI1_SCLK_ECSPI1_SCLK    0x16
                        MX8MQ_IOMUXC_ECSPI1_SS0_ECSPI1_SS0      0x19
                        MX8MQ_IOMUXC_SAI3_RXFS_GPIO4_IO28       0x16
                >;
        };

	pinctrl_ecspi2: ecspi2grp {
		fsl,pins = <
			MX8MQ_IOMUXC_ECSPI2_MOSI_ECSPI2_MOSI	0x19
			MX8MQ_IOMUXC_ECSPI2_MISO_ECSPI2_MISO	0x19
			MX8MQ_IOMUXC_ECSPI2_SCLK_ECSPI2_SCLK	0x19
			MX8MQ_IOMUXC_ECSPI2_SS0_GPIO5_IO13	0x19
			/* GPIO_PIRQ */
			MX8MQ_IOMUXC_GPIO1_IO09_GPIO1_IO9	0x17059
			/* GPIO_RST */
			MX8MQ_IOMUXC_GPIO1_IO08_GPIO1_IO8	0x59
		>;
	};

        pinctrl_usb3: usb3grp {
                fsl,pins = <
                        /* USB3.0_PWR_EN */
                        MX8MQ_IOMUXC_GPIO1_IO12_GPIO1_IO12      0x59
                        /* USB_3.0_OC */
                        MX8MQ_IOMUXC_GPIO1_IO13_GPIO1_IO13      0x16
                >;
        };

        pinctrl_usb_hub: usbhubgrp {
                fsl,pins = <
                        /* USB_HUB_EN */
                        MX8MQ_IOMUXC_GPIO1_IO15_GPIO1_IO15      0x59
                >;
        };
};

enet_phy: &fec1 {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_fec1>;
        phy-mode = "rgmii-id";
        phy-handle = <&ethphy0>;
        fsl,magic-packet;
        status = "okay";

        mdio {
                #address-cells = <1>;
                #size-cells = <0>;

                ethphy0: ethernet-phy@3 {
                        compatible = "ethernet-phy-ieee802.3-c22";
                        reg = <3>;
                };
        };
};

spi: &ecspi1 {
	#address-cells = <1>;
	#size-cells = <0>;
        fsl,spi-num-chipselects = <1>;
	//cs-gpios = <&gpio5 9 GPIO_ACTIVE_HIGH>;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_ecspi1>;
        status = "okay";
	
        can0: can@0 {
		#address-cells = <1>;
                #size-cells = <1>;
                reg = <0>;
                compatible = "microchip,mcp25625";
                spi-max-frequency = <100000>;
                interrupt-parent = <&gpio4>;
                interrupts = <28 0x2>;
                clocks = <&can0_osc>;
		status = "okay";
        };
	
	
};

tpm_dev: &ecspi2 {
	#address-cells = <1>;
	#size-cells = <0>;
        fsl,spi-num-chipselects = <1>;
	cs-gpios = <&gpio5 13 GPIO_ACTIVE_LOW>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi2>;
	status = "okay";
	tpm0: slb9670@0 {
		compatible = "infineon,slb9670";
		#address-cells = <1>;
                #size-cells = <1>;
		reg = <0>;
		spi-max-frequency = <38000000>;
		interrupt-parent = <&gpio1>;
		interrupts = <9 IRQ_TYPE_LEVEL_LOW>;
		status = "okay";
	};
};

&i2c1 {
        clock-frequency = <400000>;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_i2c1>;
        status = "okay";

        pmic: pfuze100@8 {
                compatible = "fsl,pfuze100";
                pinctrl-names = "default";
                pinctrl-0 = <&pinctrl_pmic>;
                reg = <0x08>;

                regulators {
                        sw1a_reg: sw1ab {
                                regulator-min-microvolt = <825000>;
                                regulator-max-microvolt = <1100000>;
                        };

                        sw1c_reg: sw1c {
                                regulator-min-microvolt = <825000>;
                                regulator-max-microvolt = <1100000>;
                        };

                        sw2_reg: sw2 {
                                regulator-min-microvolt = <1100000>;
                                regulator-max-microvolt = <1100000>;
                                regulator-always-on;
                        };

                        sw3a_reg: sw3ab {
                                regulator-min-microvolt = <825000>;
                                regulator-max-microvolt = <1100000>;
                                regulator-always-on;
                        };

                        sw4_reg: sw4 {
                                regulator-min-microvolt = <1800000>;
                                regulator-max-microvolt = <1800000>;
                                regulator-always-on;
                        };

                        swbst_reg: swbst {
                                regulator-min-microvolt = <5000000>;
                                regulator-max-microvolt = <5150000>;
                        };

                        snvs_reg: vsnvs {
                                regulator-min-microvolt = <1000000>;
                                regulator-max-microvolt = <3000000>;
                                regulator-always-on;
                        };

                        vref_reg: vrefddr {
                                regulator-always-on;
                        };

                        vgen1_reg: vgen1 {
                                regulator-min-microvolt = <800000>;
                                regulator-max-microvolt = <1550000>;
                        };

                        vgen2_reg: vgen2 {
                                regulator-min-microvolt = <850000>;
                                regulator-max-microvolt = <975000>;
                                regulator-always-on;
                        };

                        vgen3_reg: vgen3 {
                                regulator-min-microvolt = <1675000>;
                                regulator-max-microvolt = <1975000>;
                                regulator-always-on;
                        };

                        vgen4_reg: vgen4 {
                                regulator-min-microvolt = <1625000>;
                                regulator-max-microvolt = <1875000>;
                                regulator-always-on;
                        };

                        vgen5_reg: vgen5 {
                                regulator-min-microvolt = <3075000>;
                                regulator-max-microvolt = <3625000>;
                                regulator-always-on;
                        };

                        vgen6_reg: vgen6 {
                                regulator-min-microvolt = <1800000>;
                                regulator-max-microvolt = <3300000>;
                        };
                };
        };

        audio_codec: wm8960@1a {
		#sound-dai-cells = <0>;
                compatible = "wlf,wm8960";
                reg = <0x1a>;
                wlf,shared-lrclk;
        };

        usb_hub: usb2514bi@2c {
                compatible = "microchip,usb2514bi";
                pinctrl-names = "default";
                pinctrl-0 = <&pinctrl_usb_hub>;
                reset-gpios = <&gpio1 15 GPIO_ACTIVE_LOW>;
                reg = <0x2c>;
        };

	i2c_rtc: rtc@56 {
                compatible = "mc,rv3029c2";
                reg = <0x56>;
        };

};

&i2c2 {
        clock-frequency = <100000>;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_i2c2>;
        status = "disabled";
};

&i2c3 {
        clock-frequency = <100000>;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_i2c3>;
        status = "okay";

        ov5645_mipi: ov5645_mipi@3c {
                compatible = "ovti,ov5645";
                reg = <0x3c>;
                clocks = <&clk 200>;
                clock-names = "xclk";
                clock-frequency = <23880000>;
                pinctrl-names = "default";
                pinctrl-0 = <&pinctrl_csi1_pwn>;
                reset-gpios = <&gpio3 25 GPIO_ACTIVE_LOW>;
		status = "disabled";
                port {
                        ov5645_mipi1_ep: endpoint {
                                clock-lanes = <1>;
                                data-lanes = <0 2>;
                                remote-endpoint = <&mipi1_sensor_ep>;
                        };
                };
        };
};

i210_enet_controller: &pcie0{
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_pcie0>;
        clkreq-gpio = <&gpio5 20 GPIO_ACTIVE_LOW>;
        disable-gpio = <&gpio4 29 GPIO_ACTIVE_LOW>;
        reset-gpio = <&gpio4 30 GPIO_ACTIVE_LOW>;
        clocks = <&clk IMX8MQ_CLK_PCIE1_ROOT>,
                 <&clk IMX8MQ_CLK_PCIE1_AUX>,
                 <&clk IMX8MQ_CLK_PCIE1_PHY>,
                 <&pcie0_refclk>;
        clock-names = "pcie", "pcie_aux", "pcie_phy", "pcie_bus";
        hard-wired = <1>;
        status = "okay";
};

mini_pcie_intf: &pcie1{
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_pcie1>;
        clkreq-gpio = <&gpio5 21 GPIO_ACTIVE_LOW>;
        disable-gpio = <&gpio5 0 GPIO_ACTIVE_LOW>;
        reset-gpio = <&gpio3 19 GPIO_ACTIVE_LOW>;
        clocks = <&clk IMX8MQ_CLK_PCIE2_ROOT>,
                 <&clk IMX8MQ_CLK_PCIE2_AUX>,
                 <&clk IMX8MQ_CLK_PCIE2_PHY>,
                 <&pcie1_refclk>;
        clock-names = "pcie", "pcie_aux", "pcie_phy", "pcie_bus";
        status = "okay";
};

&pgc_gpu {
        power-supply = <&sw1a_reg>;
};

&pgc_vpu {
        power-supply = <&sw1c_reg>;
};

&snvs_pwrkey {
        status = "okay";
};

multi_protocol_serial2: &uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>, <&pinctrl_serial2_gpio>;
	assigned-clocks = <&clk IMX8MQ_CLK_UART1>;
	assigned-clock-parents = <&clk IMX8MQ_CLK_25M>;
	cts-gpios = <&gpio5 27 GPIO_ACTIVE_LOW>;
	rts-gpios = <&gpio5 26 GPIO_ACTIVE_LOW>;
	status = "okay";
};

multi_protocol_serial1: &uart2 {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_uart2>, <&pinctrl_serial1_gpio>;
        assigned-clocks = <&clk IMX8MQ_CLK_UART2>;
        assigned-clock-parents = <&clk IMX8MQ_CLK_25M>;
	cts-gpios = <&gpio5 29 GPIO_ACTIVE_LOW>;
	rts-gpios = <&gpio5 28 GPIO_ACTIVE_LOW>;
        status = "okay";
};

emmc: &usdhc1 {
        pinctrl-names = "default", "state_100mhz", "state_200mhz";
        pinctrl-0 = <&pinctrl_usdhc1>;
        pinctrl-1 = <&pinctrl_usdhc1_100mhz>;
        pinctrl-2 = <&pinctrl_usdhc1_200mhz>;
        vqmmc-supply = <&sw4_reg>;
        bus-width = <8>;
        non-removable;
        no-sd;
        no-sdio;
        status = "okay";
};

micro_sd: &usdhc2 {
        pinctrl-names = "default", "state_100mhz", "state_200mhz";
        pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_gpio>;
        pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_usdhc2_gpio>;
        pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_usdhc2_gpio>;
        bus-width = <4>;
        cd-gpios = <&gpio2 12 GPIO_ACTIVE_LOW>;
        vmmc-supply = <&reg_usdhc2_vmmc>;
        status = "okay";
};

&usb3_phy0 {
        status = "okay";
};

usb_3: &usb_dwc3_0 {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_usb3>;
        snps,dis-u1-entry-quirk;
        snps,dis-u2-entry-quirk;
        status = "okay";
        dr_mode = "host";
};

&usb3_phy1 {
        status = "okay";
};

&usb_dwc3_1 {
        status = "okay";
        dr_mode = "host";
};

&sai1 {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_sai1>;
        assigned-clocks = <&clk IMX8MQ_CLK_SAI1>;
        assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>;
        assigned-clock-rates = <49152000>;
        clocks = <&clk IMX8MQ_CLK_SAI1_IPG>, <&clk IMX8MQ_CLK_DUMMY>,
                <&clk IMX8MQ_CLK_SAI1_ROOT>, <&clk IMX8MQ_CLK_DUMMY>,
                <&clk IMX8MQ_CLK_DUMMY>, <&clk IMX8MQ_AUDIO_PLL1_OUT>,
                <&clk IMX8MQ_AUDIO_PLL2_OUT>;
        clock-names = "bus", "mclk0", "mclk1", "mclk2", "mclk3", "pll8k", "pll11k";
        status = "okay";
};

&sai2 {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_sai2>;
        assigned-clocks = <&clk IMX8MQ_CLK_SAI2>;
        assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>;
        assigned-clock-rates = <24576000>;
        status = "okay";
};

&sai4 {
        assigned-clocks = <&clk IMX8MQ_CLK_SAI4>;
        assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>;
        assigned-clock-rates = <24576000>;
        clocks = <&clk IMX8MQ_CLK_SAI4_IPG>, <&clk IMX8MQ_CLK_DUMMY>,
                <&clk IMX8MQ_CLK_SAI4_ROOT>, <&clk IMX8MQ_CLK_DUMMY>,
                <&clk IMX8MQ_CLK_DUMMY>, <&clk IMX8MQ_AUDIO_PLL1_OUT>,
                <&clk IMX8MQ_AUDIO_PLL2_OUT>;
        clock-names = "bus", "mclk0", "mclk1", "mclk2", "mclk3", "pll8k", "pll11k";
        status = "okay";
};

&spdif2 {
        assigned-clocks = <&clk IMX8MQ_CLK_SPDIF2>;
        assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>;
        assigned-clock-rates = <24576000>;
        status = "okay";
};

&gpu3d {
        status = "okay";
};

&vpu {
        status = "okay";
};

&wdog1 {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_wdog>;
        fsl,ext-reset-output;
	timeout-sec = <60>;
        status = "okay";
};

&irqsteer {
        status = "okay";
};

&dcss {
        status = "okay";

        port@0 {
                dcss_out: endpoint {
                          remote-endpoint = <&hdmi_in>;
                };
        };
};

camera_bridge: &csi1_bridge {
        fsl,mipi-mode;
        fsl,two-8bit-sensor-mode;
        status = "okay";

        port {
                csi1_ep: endpoint {
                        remote-endpoint = <&csi1_mipi_ep>;
                };
        };
};

camera: &mipi_csi_1 {
        #address-cells = <1>;
        #size-cells = <0>;
        status = "okay";
        port {
                mipi1_sensor_ep: endpoint@0 {
                        remote-endpoint = <&ov5645_mipi1_ep>;
                        data-lanes = <1 2>;
                };

                csi1_mipi_ep: endpoint@1 {
                        remote-endpoint = <&csi1_ep>;
                };
        };
};


&hdmi {
        compatible = "cdn,imx8mq-hdmi";
        lane-mapping = <0xe4>;
        status = "okay";
        port@1 {
                hdmi_in: endpoint {
                        remote-endpoint = <&dcss_out>;
                };
        };
};

&CPU_SLEEP {
	/* We are not using GPC for now, need set 0 to avoid hang */
	arm,psci-suspend-param = <0x0>;
};

&{/busfreq} {
        /* Disable busfreq, to avoid 1st Linux busfreq crash other inmates */
        status = "disabled";
};


/ {
        interrupt-parent = <&gic>;
};

