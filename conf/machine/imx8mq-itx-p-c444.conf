#@TYPE: Machine
#@NAME: WINSYSTEMS ITX-P-C444
#@SOC: i.MX8MQ
#@DESCRIPTION: Machine configuration for WINSYSTEMS ITX-P-C444
#@MAINTAINER:  bherrera@winsystems.com

MACHINEOVERRIDES =. "mx8:mx8m:mx8mq:"

require conf/machine/include/imx-base.inc
require conf/machine/include/arm/armv8a/tune-cortexa53.inc

# Mainline BSP defaults to "generic" cortexa53 configuration,
# adjust it here to include crypto extension which enables
# inline NEON and FPU code generation
DEFAULTTUNE:use-mainline-bsp = "cortexa53-crypto"

MACHINE_FEATURES += " pci wifi bluetooth"

MACHINE_SOCARCH_FILTER:append:mx8mq = " virtual/libopenvg virtual/libgles1 virtual/libgles2 virtual/egl virtual/mesa virtual/libgl virtual/libg2d"

KERNEL_DEVICETREE = "freescale/imx8mq-itx-p-c444.dtb freescale/imx8mq-itx-p-c444-lvds-auo.dtb"

UBOOT_CONFIG ??= "sd"
UBOOT_CONFIG[sd]      = "imx8mq_itx_p_c444_config,sdcard"
UBOOT_CONFIG[mfgtool] = "imx8mq_itx_p_c444_config"
SPL_BINARY = "spl/u-boot-spl.bin"

PREFERRED_PROVIDER_u-boot = "u-boot-imx"

# Set DDR FIRMWARE
DDR_FIRMWARE_NAME = "lpddr4_pmu_train_1d_imem.bin lpddr4_pmu_train_1d_dmem.bin lpddr4_pmu_train_2d_imem.bin lpddr4_pmu_train_2d_dmem.bin"

# Set u-boot DTB
UBOOT_DTB_NAME = "imx8mq-itx-p-c444.dtb"

# Set ATF platform name
ATF_PLATFORM = "imx8mq"

# Extra firmware package name, that is required to build boot container for fslc bsp
IMX_EXTRA_FIRMWARE = "firmware-imx-8m"

# Set imx-mkimage boot target
IMXBOOT_TARGETS = "flash_evk flash_evk_no_hdmi flash_dp_evk"
IMX_BOOT_SOC_TARGET = "iMX8M"

# Set Serial console
SERIAL_CONSOLES = "115200;ttymxc0"

IMAGE_BOOTLOADER = "imx-boot"

BOOT_SPACE = "65536"
LOADADDR = ""
UBOOT_SUFFIX = "bin"
UBOOT_MAKE_TARGET = ""
IMX_BOOT_SEEK = "33"

IMAGE_OVERHEAD_FACTOR = "2.0"

LICENSE_FLAGS_ACCEPTED="commercial"

